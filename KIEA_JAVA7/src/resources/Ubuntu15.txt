-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
[ 아래 주제의 요약 ]

1. 패키지

	- nfs       111, 2049, mountd_port
	- samba     139, 445
	- autofs


	# apt-cache search '^nfs-'     <--- 사이트에서 패키지 목록 검색
	# apt-cache show '^nfs-'       <--- 사이트에서 패키지 정보 검색
	
	# apt-get install -y rpcbind
	# apt-get install -y nfs-common
	# apt-get install -y nfs-kernel-server
	# apt-get install -y samba
	# apt-get install -y autofs    <--- client
	# dpkg -i rpcbind              <--- oracle, deb, nfs-common

	# dpkg -l                             <--- PC에 설치된 모든 패키지
	# dpkg -l | egrep 'rpcbind|nfs|samba|autofs'

	# apt-get remove rpcbind
	# apt-get purge  rpcbind
	# dpkg -r        rpcbind
	# dpkg --purge   rpcbind
	
	# apt-get update
	# apt-get upgrade                     <--- 시간 많이 걸림
	# apt-get dist-upgrade                <--- 커널 업그레이드

	# /etc/init.d/[name] [start|stop|restart|status]
		rpcbind
		nfs-kernel-server
		smbd
		nmbd
		ssh
		autofs
	
	# netstat -napt
	
	# rpcinfo -p

	# vi /etc/exports      <--- nfs 서버
	# vi /etc/fstab        <--- nfs 클라이언트
	# mount -t nfs 192.168.0.21:/var/nfs_server  /var/nfs_client    <--- nfs 클라이언트
	# umount /var/nfs_client







-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
[ NFS 설정 ]

0. nfs 설치에 관련된 정보는 아래와 같다.

	- portmap/rpcbind : 포트 매퍼
	- nfs-kernel-server : nfs 서버
	- nfs-common : nfs 클라이언트


1. nfs 서버가 설치 되어 있는지 확인한다.

	# dpkg-reconfigure portmap
		.....
	
	# service nfs-kernel-server restart
		.....

2. nfs 서버가 설치 되어 있지 않으면 인터넷으로 설치한다.

	# apt-get install -y nfs-kernel-server    <-- server, client
		.....

3. nfs 클라이언트를 설치한다.

	# apt-get install -y nfs-common
		.....

4. portmap을 설치한다.

	# apt-get install -y portmap

	# apt-get install -y rpcbind




----------------------------------------------------
[ NFS 서버 설정 ]  192.168.0.21

0. nfs 서버 패키지 설치

	# apt-get install -y rpcbind
	# apt-get install -y nfs-common
	# apt-get install -y nfs-kernel-server
	
	# apt-get install -y rpcbind nfs-common nfs-kernel-server

	# dpkg -l | egrep 'nfs|rpcbind'
	
		ii  libnfsidmap2:amd64   0.25-5               amd64    NFS idmapping library
		ii  nfs-common           1:1.2.8-9ubuntu8.1   amd64    NFS support files common to client and server
		ii  nfs-kernel-server    1:1.2.8-9ubuntu8.1   amd64    support for NFS kernel server
		ii  rpcbind              0.2.1-6ubuntu3.1     amd64    converts RPC program numbers into universal addresses


1. nfs 폴더를 생성한다.

	# mkdir /var/nfs_server

2. 퍼미션을 666(or 777)으로 한다.

	# chmod 0666 /var/nfs_server

3. /etc/exports 환경파일을 설정한다.

	# vi /etc/exports
	
		# [folder] [접근 host/ip](옵션) [접근 host/ip](옵션) ...
		# 옵션
		#    rw(read-write), ro(read-only)
		#    no_root_squash : 서버와 클라이언트의 root 사용자를 같도록 설정한다.
		#    no_all_squash[default] : root 이외 모든 사용자에 대해 같은 UID를 가진 사용자는 모두 동일한 권한을 준다(모든 UID가 nobody)
		#    no_subtree_check : 하위 디렉토리 체크를 안한다.
		#    sync : NFS간에 sync를 맞춘다.
		#
		/var/nfs_server 192.168.0.22(rw,no_root_squash)

4. nfs 서버를 실행한다.

	# /etc/init.d/nfs-kernel-server restart
		[ ok ] Restarting nfs-kernel-server (via systemctl): nfs-kernel-server.service.
		
	# /etc/init.d/rpcbind restart
		[ ok ] Restarting rpcbind (via systemctl): rpcbind.service.

5. 잘 실행되었는지 확인한다.

	# netstat -napt
	
		Active Internet connections (servers and established)
		Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
		tcp        0      0 0.0.0.0:37963           0.0.0.0:*               LISTEN      -               
		tcp        0      0 0.0.0.0:111             0.0.0.0:*               LISTEN      2954/rpcbind    
		tcp        0      0 0.0.0.0:55443           0.0.0.0:*               LISTEN      2957/rpc.mountd 
		tcp        0      0 0.0.0.0:39348           0.0.0.0:*               LISTEN      2956/rpc.statd  
		tcp        0      0 0.0.0.0:41750           0.0.0.0:*               LISTEN      2957/rpc.mountd 
		tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      557/sshd        
		tcp        0      0 0.0.0.0:2049            0.0.0.0:*               LISTEN      -               
		tcp        0      0 0.0.0.0:32802           0.0.0.0:*               LISTEN      2957/rpc.mountd 
		tcp        0      0 192.168.0.21:2049       192.168.0.22:748        ESTABLISHED -               
		tcp        0      0 192.168.0.21:741        192.168.0.22:54938      ESTABLISHED -               
		tcp        0    404 192.168.0.21:22         121.171.81.27:56329     ESTABLISHED 766/sshd: kang [pri
		tcp        0      0 192.168.0.21:22         121.171.81.27:56403     ESTABLISHED 856/sshd: kang [pri
		tcp6       0      0 :::43976                :::*                    LISTEN      2956/rpc.statd  
		tcp6       0      0 :::111                  :::*                    LISTEN      2954/rpcbind    
		tcp6       0      0 :::47060                :::*                    LISTEN      2957/rpc.mountd 
		tcp6       0      0 :::22                   :::*                    LISTEN      557/sshd        
		tcp6       0      0 :::40187                :::*                    LISTEN      2957/rpc.mountd 
		tcp6       0      0 :::35135                :::*                    LISTEN      -               
		tcp6       0      0 :::2049                 :::*                    LISTEN      -               
		tcp6       0      0 :::59878                :::*                    LISTEN      2957/rpc.mountd 
	
	# rpcinfo -p
	
	   program vers proto   port  service
	    100000    4   tcp    111  portmapper
	    100000    3   tcp    111  portmapper
	    100000    2   tcp    111  portmapper
	    100000    4   udp    111  portmapper
	    100000    3   udp    111  portmapper
	    100000    2   udp    111  portmapper
	    100005    3   udp  35409  mountd
	    100005    3   tcp  55443  mountd
	    100024    1   udp  51715  status
	    100024    1   tcp  39348  status
	    100003    2   tcp   2049  nfs
	    100003    3   tcp   2049  nfs
	    100003    4   tcp   2049  nfs
	    100227    2   tcp   2049
	    100227    3   tcp   2049
	    100003    2   udp   2049  nfs
	    100003    3   udp   2049  nfs
	    100003    4   udp   2049  nfs
	    100227    2   udp   2049
	    100227    3   udp   2049
	    100021    1   udp  58721  nlockmgr
	    100021    3   udp  58721  nlockmgr
	    100021    4   udp  58721  nlockmgr
	    100021    1   tcp  37963  nlockmgr
	    100021    3   tcp  37963  nlockmgr
	    100021    4   tcp  37963  nlockmgr

	# exportfs -v

		/var/nfs_server
				192.168.0.22(rw,wdelay,no_root_squash,no_subtree_check,sec=sys,rw,no_root_squash,no_all_squash)

6. 





----------------------------------------------------
[ NFS 클라이언트 설정 ]   192.168.0.22

0. nfs 클라이언트 설치한다.

	# apt-get install nfs-common
		.....

	# dpkg -l | egrep 'nfs|rpcbind'
	
		ii  libnfsidmap2:amd64   0.25-5               amd64    NFS idmapping library
		ii  nfs-common           1:1.2.8-9ubuntu8.1   amd64    NFS support files common to client and server
		ii  rpcbind              0.2.1-6ubuntu3.1     amd64    converts RPC program numbers into universal addresses

1. mount를 할 폴더를 생성하고 퍼미션을 666(or 777)로 세팅한다.

	# mkdir /var/nfs_client
		.....
	
	# chmod 0666 /var/nfs_client
	
2. mount를 실행한다

	# mount -t nfs 192.168.0.21:/var/nfs_server /var/nfs_client
	#

3. 확인한다.

	# df -h -T

		Filesystem                   Type      Size  Used Avail Use% Mounted on
		udev                         devtmpfs  2.0G     0  2.0G   0% /dev
		tmpfs                        tmpfs     396M  5.6M  390M   2% /run
		/dev/sda1                    ext4      197G  1.8G  185G   1% /
		tmpfs                        tmpfs     2.0G     0  2.0G   0% /dev/shm
		tmpfs                        tmpfs     5.0M     0  5.0M   0% /run/lock
		tmpfs                        tmpfs     2.0G     0  2.0G   0% /sys/fs/cgroup
		VB_share                     vboxsf    299G  117G  182G  40% /media/sf_VB_share
		192.168.0.21:/var/nfs_server nfs4      197G  1.8G  185G   1% /var/nfs_client           <-- mount
		tmpfs                        tmpfs     396M     0  396M   0% /run/user/1000

4. auto 마운트를 위해 /etc/fstab을 수정한다.

	# vi /etc/fstab
	
		# /etc/fstab: static file system information.
		#
		# Use 'blkid' to print the universally unique identifier for a
		# device; this may be used with UUID= as a more robust way to name devices
		# that works even if disks are added and removed. See fstab(5).
		#
		# <file system> <mount point>   <type>  <options>       <dump>  <pass>
		# / was on /dev/sda1 during installation
		UUID=28fefef5-1916-4e37-98f6-b591af8cacc4 /               ext4    errors=remount-ro 0       1
		# swap was on /dev/sda5 during installation
		UUID=215c53f9-66b4-4881-a936-27665fb11d2d none            swap    sw              0       0
		
		192.168.0.21:/var/nfs_server /var/nfs_client		nfs defaults 0 0                  <-- insert mount information





-----------------------------------------------------------------------------------------------------
[ NFS 패키지 삭제 ]

1. apt-get remove 방법은 패키지를 삭제하지만 설정파일등 추가로 작업한 파일은 제거하지 않는다.

	# apt-get remove nfs-kernel-server
		.....

2. apt-get purge 방법은 패키지 설치후 나중에 생성한 관련 파일까지 제가한다.

	# apt-get purge nfs-kernel-server
		.....

3. apt-cache search 방법으로 확인한다.

	# apt-cache search nfs-kernel-server
		.....

	# dpkg-reconfigure nfs-common
		.....

4. 





-----------------------------------------------------------------------------------------------------
[ apt-get 명령어 ]

1. 패키지 설치

	# apt-get install -y [Package Name]
	
	# apt-get --reinstall install -y [Package Name]      <--- 재설치

2. 패키지 제거

	# apt-get remove [Package Name]

	# apt-get purge [Package Name]

3. 패키지 업데이트

	# apt-get update

4. 패키지 업그레이드

	# apt-get upgrade

5. OS 업그레이드

	# apt-get dist-upgrade

6. 패키지 검색

	# apt-cache search [Package Name]

7. 패키지 정보 보기

	# apt-cache show [Package Name]








-----------------------------------------------------------------------------------------------------
[ dpkg 명령어 ]

1. 설치된 모든 패키지 보기

	# dpkg -l
		..... [ too much ]
	
	# dpkg -l | grep ora*      <-- search packages for specific word

	# dpkg -l | egrep 'nfs|rpcbind'
	
		ii  libnfsidmap2:amd64   0.25-5               amd64    NFS idmapping library
		ii  nfs-common           1:1.2.8-9ubuntu8.1   amd64    NFS support files common to client and server
		ii  rpcbind              0.2.1-6ubuntu3.1     amd64    converts RPC program numbers into universal addresses

2. 패키지 설치

	# dpkg -i [Package Name]     <--- oracle, deb


3. 패키지 제거

	# dpkg -r [Package Name]
	
	# dpkg --purge [Package Name]



-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
[ samba 서버 설치 ]

1. 패키지 설치 확인

	# apt-cache search samba
		.....

2. 패키지 설치

	# apt-get install -y samba
		.....

3. 공유할 폴더를 만든다.

	# mkdir /var/smb_server
	
	# chmod 0777 /var/smb_server

4. 설정파일에 아래 내용을 추가한다.

	# vi /etc/samba/smb.conf
		
		.....
			
		#======================= MySetting =======================
		   security = user
		
		[SMB_kang]
		   comment = SMB kang user
		   path = /var/smb_server
		   writable = yes
		   browseable = yes
		   ;public = yes    <--- 공유됨
		   valid user = kang
		
		#======================= Share Definitions =======================
		.....


5. 사용자 등록

	# smbpasswd -a kang
	
		New SMB password:****
		Retype new SMB password:****
		Added user kang.
	#
	

6. 서비스 종료 실행 재실행 - 1

	# /etc/init.d/smbd stop
		[ ok ] Stopping smbd (via systemctl): smbd.service.
	# /etc/init.d/nmbd stop
		[ ok ] Stopping nmbd (via systemctl): nmbd.service.


	# /etc/init.d/smbd start
		[ ok ] Starting smbd (via systemctl): smbd.service.
	# /etc/init.d/nmbd start
		[ ok ] Starting nmbd (via systemctl): nmbd.service.


	# /etc/init.d/smbd restart
		[ ok ] Restarting smbd (via systemctl): smbd.service.
	# /etc/init.d/nmbd restart
		[ ok ] Restarting nmbd (via systemctl): nmbd.service.


7. 서비스 종료 실행 재실행 - 2

	# service smbd stop
	# service nmbd stop

	# service smbd start
	# service nmbd start

	# service smbd restart
	# service nmbd restart

8. 확인

	# netstat -napt

		Active Internet connections (servers and established)
		Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
		tcp        0      0 0.0.0.0:139             0.0.0.0:*               LISTEN      1685/smbd         <--- smbd
		tcp        0      0 0.0.0.0:111             0.0.0.0:*               LISTEN      365/rpcbind     
		tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      529/sshd        
		tcp        0      0 0.0.0.0:445             0.0.0.0:*               LISTEN      1685/smbd         <--- smbd
		tcp        0      0 0.0.0.0:53766           0.0.0.0:*               LISTEN      -               
		tcp        0      0 192.168.0.22:22         121.171.81.27:57416     ESTABLISHED 1057/sshd: kang [pr
		tcp        0    404 192.168.0.22:22         121.171.81.27:57338     ESTABLISHED 819/sshd: kang [pri
		tcp        0      0 192.168.0.22:721        192.168.0.21:2049       ESTABLISHED -               
		tcp6       0      0 :::139                  :::*                    LISTEN      1685/smbd       
		tcp6       0      0 :::111                  :::*                    LISTEN      365/rpcbind     
		tcp6       0      0 :::22                   :::*                    LISTEN      529/sshd        
		tcp6       0      0 :::44695                :::*                    LISTEN      -               
		tcp6       0      0 :::445                  :::*                    LISTEN      1685/smbd       
	
	# ps -ef | grep nmbd

		root      1894     1  0 15:11 ?        00:00:00 /usr/sbin/nmbd -D         <--- nmbd
		root      1938   909  0 15:27 pts/0    00:00:00 grep --color=auto nmbd
	
	# service smbd status
	
		* smbd.service - LSB: start Samba SMB/CIFS daemon (smbd)
		   Loaded: loaded (/etc/init.d/smbd)
		   Active: active (running) since Thu 2017-04-06 15:09:56 KST; 19min ago
		     Docs: man:systemd-sysv-generator(8)
		  Process: 1844 ExecStop=/etc/init.d/smbd stop (code=exited, status=0/SUCCESS)
		  Process: 1851 ExecStart=/etc/init.d/smbd start (code=exited, status=0/SUCCESS)
		   CGroup: /system.slice/smbd.service
		           |-1861 /usr/sbin/smbd -D
		           |-1862 /usr/sbin/smbd -D
		           `-1895 /usr/sbin/smbd -D
		
		Apr 06 15:09:55 ubuntu152 systemd[1]: Starting LSB: start Samba SMB/CIFS daemon (smbd)...
		Apr 06 15:09:56 ubuntu152 smbd[1851]: * Starting SMB/CIFS daemon smbd
		Apr 06 15:09:56 ubuntu152 smbd[1851]: ...done.
		Apr 06 15:09:56 ubuntu152 systemd[1]: Started LSB: start Samba SMB/CIFS daemon (smbd).
	
	# service nmbd status
	
		* nmbd.service - LSB: start Samba NetBIOS nameserver (nmbd)
		   Loaded: loaded (/etc/init.d/nmbd)
		   Active: active (running) since Thu 2017-04-06 15:11:13 KST; 17min ago
		     Docs: man:systemd-sysv-generator(8)
		  Process: 1875 ExecStop=/etc/init.d/nmbd stop (code=exited, status=0/SUCCESS)
		  Process: 1880 ExecStart=/etc/init.d/nmbd start (code=exited, status=0/SUCCESS)
		   CGroup: /system.slice/nmbd.service
		           `-1894 /usr/sbin/nmbd -D
		
		Apr 06 15:11:13 ubuntu152 systemd[1]: Starting LSB: start Samba NetBIOS nameserver (nmbd)...
		Apr 06 15:11:13 ubuntu152 nmbd[1880]: * Starting NetBIOS name server nmbd
		Apr 06 15:11:13 ubuntu152 nmbd[1880]: ...done.
		Apr 06 15:11:13 ubuntu152 systemd[1]: Started LSB: start Samba NetBIOS nameserver (nmbd).
	
	
	

8. Windows에서 확인

	\\192.168.0.22\SMB_kang   <--- /etc/samba/smb.conf > [SMB_kang]



-----------------------------------------------------------------------------------------------------
[ samba 클라이언트 설정 ]

1. 패키지 설치

	# apt-get install -y samba-client
		.....

2. 확인

	# smbclient -U kang -L 192.168.0.21

		Enter kang's password: 
		Domain=[WORKGROUP] OS=[Unix] Server=[Samba 4.1.13-Ubuntu]
		
			Sharename       Type      Comment
			---------       ----      -------
			print$          Disk      Printer Drivers
			SMB_kang        Disk      SMG kang user
			IPC$            IPC       IPC Service (ubuntu151 server (Samba, Ubuntu))
		Domain=[WORKGROUP] OS=[Unix] Server=[Samba 4.1.13-Ubuntu]
		
			Server               Comment
			---------            -------
			UBUNTU151            ubuntu151 server (Samba, Ubuntu)
		
			Workgroup            Master
			---------            -------
			WORKGROUP            UBUNTU151

	#

3. cifs 마운트

	# mount -t cifs //192.168.0.21/SMB_kang /var/smb_client -o user=kang,pass=kang123
	
		mount: wrong fs type, bad option, bad superblock on //192.168.0.21/SMB_kang,
		       missing codepage or helper program, or other error
		       (for several filesystems (e.g. nfs, cifs) you might
		       need a /sbin/mount.<type> helper program)
		
		       In some cases useful info is found in syslog - try
		       dmesg | tail or so.

	cifs 에러가 발생에 따른 해결
	
	# apt-get install -y cifs-utils   <--- cifs 설치

		Reading package lists... Done
		Building dependency tree       
		Reading state information... Done
		The following packages were automatically installed and are no longer required:
		  attr libaio1 libfile-copy-recursive-perl libhdb9-heimdal libkdc2-heimdal python-dnspython samba-dsdb-modules samba-vfs-modules tdb-tools update-inetd
		Use 'apt-get autoremove' to remove them.
		Suggested packages:
		  winbind
		The following NEW packages will be installed:
		  cifs-utils
		0 upgraded, 1 newly installed, 0 to remove and 3 not upgraded.
		Need to get 86.7 kB of archives.
		After this operation, 262 kB of additional disk space will be used.
		Get:1 http://kr.archive.ubuntu.com/ubuntu/ vivid/main cifs-utils amd64 2:6.0-1ubuntu2 [86.7 kB]
		Fetched 86.7 kB in 2s (38.0 kB/s)     
		Selecting previously unselected package cifs-utils.
		(Reading database ... 60232 files and directories currently installed.)
		Preparing to unpack .../cifs-utils_2%3a6.0-1ubuntu2_amd64.deb ...
		Unpacking cifs-utils (2:6.0-1ubuntu2) ...
		Processing triggers for man-db (2.7.0.2-5) ...
		Setting up cifs-utils (2:6.0-1ubuntu2) ...

	# mount -t cifs //192.168.0.21/SMB_kang /var/smb_client -o user=kang,pass=kang123 

	# mount -t cifs //192.168.0.15/kang_64 /var/smb_kang_64 -o user=kang,pass='kang123'

4. autofs 에 등록

	# vi /etc/auto.master
	
		#
		# Sample auto.master file
		# This is an automounter map and it has the following format
		# key [ -mount-options-separated-by-comma ] location
		# For details of the format look at autofs(5).
		#
		#/misc	/etc/auto.misc
		#
		# NOTE: mounts done from a hosts map will be mounted with the
		#	"nosuid" and "nodev" options unless the "suid" and "dev"
		#	options are explicitly given.
		#
		#/net	-hosts
		#
		# Include /etc/auto.master.d/*.autofs
		#
		+dir:/etc/auto.master.d
		#
		# Include central master map if it can be found using
		# nsswitch sources.
		#
		# Note that if there are entries for /net or /misc (as
		# above) in the included master map any keys that are the
		# same will not be seen as the first read key seen takes
		# precedence.
		#
		+auto.master
		
		/-		/etc/auto.direct                 <---
	
	# vi /etc/auto.direct	

		#
		#
		#
		
		/var/nfs_client		-rw,soft	192.168.0.21:/var/nfs_server
		/var/smb_client		-fstype=cifs,rw,username=kang,passwd=kang123		://192.168.0.21/SMB_kang
		/var/smb_kang_64	-fstype=cifs,rw,username=kangseok64,passwd=kang123	://192.168.0.15/kang_64

	# /etc/init.d/autofs restart

	soft 연결이므로 공유된 폴더를 사용할 때 실제 mount가 연결된다. 즉, 자동 mount
	
	# df -h -T
	
		Filesystem                   Type      Size  Used Avail Use% Mounted on
		udev                         devtmpfs  2.0G     0  2.0G   0% /dev
		tmpfs                        tmpfs     396M  5.6M  390M   2% /run
		/dev/sda1                    ext4      197G  1.9G  185G   1% /
		tmpfs                        tmpfs     2.0G     0  2.0G   0% /dev/shm
		tmpfs                        tmpfs     5.0M     0  5.0M   0% /run/lock
		tmpfs                        tmpfs     2.0G     0  2.0G   0% /sys/fs/cgroup
		VB_share                     vboxsf    299G  113G  187G  38% /media/sf_VB_share
		tmpfs                        tmpfs     396M     0  396M   0% /run/user/1000

	# cd /var/nfs_client
	# cd /var/smb_client
	# cd /var/smb_kang_64
	
	# df -h -T
	
		Filesystem                   Type      Size  Used Avail Use% Mounted on
		udev                         devtmpfs  2.0G     0  2.0G   0% /dev
		tmpfs                        tmpfs     396M  5.6M  390M   2% /run
		/dev/sda1                    ext4      197G  1.9G  185G   1% /
		tmpfs                        tmpfs     2.0G     0  2.0G   0% /dev/shm
		tmpfs                        tmpfs     5.0M     0  5.0M   0% /run/lock
		tmpfs                        tmpfs     2.0G     0  2.0G   0% /sys/fs/cgroup
		VB_share                     vboxsf    299G  113G  187G  38% /media/sf_VB_share
		tmpfs                        tmpfs     396M     0  396M   0% /run/user/1000
		//192.168.0.15/kang_64       cifs       50G   22G   29G  44% /var/smb_kang_64    <---
		//192.168.0.21/SMB_kang      cifs      197G  1.9G  185G   2% /var/smb_client     <---
		192.168.0.21:/var/nfs_server nfs4      197G  1.9G  185G   2% /var/nfs_client     <---


-----------------------------------------------------------------------------------------------------
[ samba 설정 ]

1. [global]

	전반적인 samba 설정을 다룹니다. 접속권한, 인증방법, 로그 설정 등

2. [homes]

	사용자 계정의 기본 공유 디렉토리 입니다. 접속 유저별 자신의 공유 공간

3. [public]

	관리자가 별도로 정의해서 사용하는 공유 디렉토리 입니다. 명칭 및 권한 등 자유롭게 설정



-----------------------------------------------------------------------------------------------------
먼저 [global] 설정에 대해 알아봅니다.

① Browsing/Identification

	# workgroup는 네트워크 공유 그룹 이름입니다.
	# 기업이나 단체에서는 단일 네트워크 내에 여러 PC가 있기에 group을 지정합니다만,
	# 개인용으로 사용하시는 거라면 group이 별 의미가 없습니다. 그냥 그대로 둡니다.
	
		workgroup = WORKGROUP
	
	# 서버 이름을 표시합니다. Windows에서 네트워크로 검색해보면 나오는 PC 이름에 해당합니다.
	# 기본으로는 호스트명(%h)을 표시하도록 되어 있습니다. 본인이 원하는 이름으로 바꾸셔도 됩니다.
	# (예)  server string = HamoniKR Samba server
	
		server string = %h server (Samba, Linux Mint)
	
	# samba 서버에 접속할때, ID 계정을 확인하여 접속 유무를 허용한다면 "user"로 설정하고,
	# ID 계정 없이 누구나 접속하게 하려면 "share"로 설정합니다.
	# 여기서는 보안상 계정 확인이 안전하므로, user 상태 그대로 두겠습니다.
	# 기본 설정 파일에는 아래 항목이 없을 수도 있습니다. default가 user 이므로 설정이 없어도 무방합니다.
	
		security = user
	
	# Windows 기반의 Name 서비스를 사용하는 경우...
	# nmbd 데몬이 wins server 역할을 하고, 등록되지 않은 NetBIOS 이름을 찾아줄때,
	# DNS server를 이용하여 NetBIOS 이름을 찾아줄 것인지를 지정하는 옵션입니다.
	# wins server를 사용하지 않는 경우라면, 이 값들을 수정할 필요가 없습니다. (주석 그대로 유지)
	
		# wins support = no
		# wins server = w.x.y.z
		# wins proxy = yes
		dns proxy = no

② Networking

	# 여러개의 네트워크 장치(랜카드)를 사용 중이면서, 특정 네트워크 장치로 samba 서비스를 제한해야 하는 경우
	# 사용할 네트워크 장치를 정의할 수 있습니다.
	# 일반적인 경우에는 수정할 필요가 없으므로 주석 그대로 남겨둡니다.
	
		;   interfaces = 127.0.0.0/8 eth0
		;   bind interfaces only = yes
	
	# 특정 IP 또는 대역폭에서의 접근만을 허용하고 싶은 경우...
	# 아래의 유형들 중 하나를 선택하여 내용을 추가합니다.
	# 접속 IP 단위로 접근을 허용
	
		hosts allow = 192.168.0.100 192.168.0.101
		
	# 대역폭 단위로 지정. 마지막에 점(.)으로 끝남에 유의
	
		hosts allow = 192.168.0. 10.10.10.
		
	# 192.168.0.0 네트워크 대역에 속한 접속은 허용하되, 100번 101번은 제외
	
		hosts allow = 192.168.0. except 192.168.0.100 192.168.0.101
		
	# 호스트명 단위로 접근 설정
	
		hosts allow = hamonikr01 hamonikr02 hamonikrweb hamonikrdb

③ Debugging/Accounting

	# 로그 파일의 경로를 지정합니다.
	# samba에 접속하는 호스트 별로 개별적인 로그 파일을 만들도록 설정되어 있습니다.
	# 기본값 그대로 두어도 무방합니다.
	
		log file = /var/log/samba/log.%m
	
	# 로그 파일의 최대 사이즈를 지정합니다. (kb 단위)
	# 로그 파일의 용량이 지정된 사이즈를 초과하는 경우,
	# loglotate를 통해서 넘버링을 하고 새로운 로그파일로 저장됩니다.
	
		max log size = 1000
	
	# samba를 통한 파일 오퍼레이션(operation)에 있어 로그를 남기도록 하는 설정입니다.
	# 파일 오퍼레이션 : read pread write pwrite chmod rmdir unlink mkdir rename 등
	# syslog 서비스가 같이 구동되어야 합니다. 기본값은 no
	
		# syslog only = no
		syslog = 0
	
	# samba 서버가 강제종료(crash)되는 등의 이슈 발생 시, admin 계정으로 메일 통지를 보내는 설정입니다.
	# 기본 설정 그대로 둡니다.
	
		panic action = /usr/share/samba/panic-action %d

④ Authentication

	# samba의 역할을 정의합니다.
	# samba를 도메인 컨트롤러로 사용하지 않는 이상 단일서버(standaloneserver)로 사용합니다.
	
		server role = standalone server
	
	# 사용자 패스워드를 어떻게 관리할지를 결정합니다.
	# 일반적으로 smbpasswd를 사용합니다.
	# 계정 수가 많아져도 부하가 적어 빠른 성능을 보여주는 tdbsam으로 변경할 수 있습니다. (기본값 smbpasswd)
	
		; passdb backend = tdbsam
	
	# PAM 인증 방식을 준수한다는 설정입니다. 기본값 그대로 둡니다.
	
		obey pam restrictions = yes
	
	# samba 계정의 패스워드 변경 시, 해당 리눅스 계정도 같이 동기화할 수 있도록하는 옵션입니다.
	# 이를 위해 encrypt password, smb passwd file 두 옵션을 반드시 사용해야 합니다.
	# passwd chat에서 패스워드 변경 시 사용자에게 보여지는 메세지 설정이 가능합니다.
	
		unix password sync = yes
		passwd program = /usr/bin/passwd %u
		passwd chat = *Enter\snew\s*\spassword:* %n\n *Retype\snew\s*\spassword:* %n\n *password\supdated\ssuccessfully* .
	
	# 패스워드 변경 요청 시 PAM을 사용하여 변경하도록하는 설정입니다. 기본값 그대로 둡니다.
	
		pam password change = yes
	
	# 클라이언트에서 samba 접근 시, 로그인에 실패한 사용자들을 어떻게 취급할지를 결정합니다.
	# 기본값은 bad user는 guest로 취급하는 것입니다.
	
		map to guest = bad user
	
⑤ 기타

	# 사용자 공유에 guest 접근을 허용합니다.
	
		usershare allow guests = yes
	
	# samba 계정과 리눅스 계정을 다르게 사용할 경우 매칭 테이블 파일을 지정합니다.
	
		username map = /etc/samba/smbusers
	
	#################################################################
	다음으로 [homes] 설정에 대해 알아봅니다.
	여기서부터는 사용 형태에 따라 임의로 설정해주어야 합니다.
	
	[homes] 설정은, 접속하는 samba 계정별로 가지는 자신만의 공유 경로로서,
	본인만이 사용하고 읽기/쓰기 권한을 모두 가지는게 일반적입니다.
	이점을 고려하여 아래와 같이 설정을 해보도록 합니다.
	
		[homes]
		  comment = Home Directories        # 설명
		  valid users = %S                  # 본인만 사용
		  writeable = yes                   # 쓰기 허용
		  browseable = no                   # 숨김
	
	※ 자신의 경로로 자동 지정되므로, path 옵션을 사용할 필요가 없습니다.
	
	#################################################################
	다음은 프린터 설정입니다.
	현재 시스템에 프린터가 설치되어 있다면, 자동으로 공유프린터로 보여지도록 설정되어 있습니다.
	기본값 그대로 사용하면 됩니다.
	
		[printers]
		  comment = All Printers
		  browseable = no
		  path = /var/spool/samba
		  printable = yes
		; guest ok = no
		; read only = yes
		  create mask = 0700 
	
	#################################################################
	이제 필요한 공유 디렉터리를 입맛대로 만들어 보도록 합니다.
	각 옵션별 의미를 파악하면 이들을 잘 조합하여 공유 폴더를 만들 수 있습니다.
	
	먼저 공개(public) 항목을 만들어 보겠습니다.
	공개 디렉터리이기에 누구나 접근할 수 있어야 하며, 보안상 읽기전용으로 설정하기도 합니다.
	
		[public]
		  comment = Public Directories
		  path = /var/public                # 시스템 상의 접속 경로 지정
		  public = yes                      # public 권한
		  writable = no                     # 쓰기 불가 (읽기 전용)
		  write list = @staff               # 읽기 전용이지만, staff 그룹 사용자는 쓰기 허용
		  force user = admin                # 파일/폴더 생성 시, 지정되는 user 계정
		  force group = staff               # 파일/폴더 생성 시, 지정되는 group 계정 
	
	#################################################################
	특정 사용자들에 한해 읽기/쓰기가 가능한 공유 디렉터리를 만들어 보겠습니다.
	
		[data]
		  comment = Data Directories
		  path = /var/data                  # 시스템 상의 접속 경로 지정
		  read only = no                    # 읽기만 가능하게 할지를 지정
		  writable = yes                    # 쓰기 허용
		  valid user = user1 user2 user3    # 사용 가능한 사용자를 지정
		  public = no                       # guest는 이용할 수 없고 개인 사용자만 사용
		  browseable = no
		  create mask = 0777                # 파일 생성 mask
		  directory mask = 0777             # 디렉터리 생성 mask
		  follow symlinks = no              # 심볼릭 링크로 이동 제한
	
	※ 공유 디렉터리를 사용할 user가 많은 경우, 그룹으로 간단히 명시할 수도 있습니다.
	   그룹 표시문자(@)를 사용 (예: valid user = @groupname)
	※ mask는 파일/디렉터리 생성시 적용되는 퍼미션(사용권한)을 말합니다.
	   첫째 자리는 시스템 구분 비트이므로 제외하고, 두번째 자리부터 "사용자(user), 그룹(group), 기타(other)" 입니다.
	   숫자값은 "읽기(read)/쓰기(write)/실행(exec)"을 뜻하며, 각 자리의 값은 읽기(4), 쓰기(2), 실행(1) 입니다.
	   즉, 숫자가 6이면 읽기/쓰기(r+w), 7이면 읽기/쓰기/실행(r+w+x), 5이면 읽기/실행(r+x) 입니다.
	   위 예에서와 같이 0777 이면, 사용자/그룹/기타 모두에게 읽기/쓰기/실행 권한을 주겠다는 뜻이 됩니다.
	   필요에 따라 0755, 0644 등과 같이 적절한 퍼미션 값을 지정하면 됩니다.
	
	#################################################################
	
	samba 설정에 대해 대략 살펴보았는데요.
	설정 설명 위주다보니 제가 봐도 따분하게 느껴지네요.
	초급편에서 samba 구동까지 마치셨다면, 중급편에서 필요한 부분만 뽑아 사용하면 무난히 설정할 수 있으리라 보여집니다.







-----------------------------------------------------------------------------------------------------
[ 트러블 슈팅 (Trouble Shooting) ]

■ [Q1] Windows의 "네트워크"에 samba 서버 이름이 나오지 않습니다.

	"작업그룹" 상의 이름을 확인해 봅니다.
	Samba 서버에서 설정시, workgroup 항목의 값과 클라이언트(windows)의 작업그룹이 같은지 확인해 봅니다.
	Samba 서버의 workgroup의 기본 값은 "WORKGROUP"으로 되어 있습니다. (별도로 변경하지 않았다면)
	Windows의 경우, WinXP까지는 "MSHOME"으로 되어 있으며, Win7 이후로는 "WORKGROUP"이 기본 값으로 되어 있을 겁니다.
	
	"작업그룹"이 다르더라도 호스트명 또는 IP로 직접 접속할 수 있습니다.
	"탐색기" 상단에 아래와 같이 주소를 직접 입력하면 바로 접근할 수 있습니다.
	
		\\192.168.0.**     ← Samba 서버의 IP를 직접 입력
		\\hostname           ← Samba 서버의 호스트명을 직접 입력

■ [Q2] IP로 직접 접속했으나, 연결할 수 없다는 메시지가 나옵니다.

	① 먼저 Samba 서버에 방화벽이 설정되어 있는지 확인해 보세요.

		$ sudo iptables -L
	
			[sudo] password for user: 
			Chain INPUT (policy ACCEPT)
			target     prot opt source               destination         
			
			Chain FORWARD (policy ACCEPT)
			target     prot opt source               destination         
			
			Chain OUTPUT (policy ACCEPT)
			target     prot opt source               destination

	※ 위와 같이 나온다면, 방화벽이 구동되지 않은 상태입니다.
	
	방화벽이 구동 중이라면, 사용하고자 하는 samba 포트를 개방시켜 주어야 합니다. (방화벽 설정방법은 별도 확인)
	우선 방화벽을 내린 뒤 다시 접속해보고, 방화벽 문제로 인한 접속오류인지 확인해 보세요.
	
		$ sudo iptables -F
	
	② 두번째로, 방화벽 문제도 아니라면, SELinux 동작 유무를 확인합니다.

		$ sudo sestatus
			SELinux status: enabled
			SELinuxfs mount: /selinux
			Current mode: enforcing
			Mode from config file: enforcing
			Policy version: 24
			Policy from config file: targeted

	위와 같이 enforcing으로 나온다면, SELinux가 동작 중인 것이며,
	SELinux 설정을 추가하여 Samba를 허용해 주어야 합니다. (SELinux 설정방법은 별도 확인)
	우선 SELinux를 비활성화 시킨 뒤 다시 접속해보고, SELinux 문제인지 확인해 보세요.

		$ sudo setenforce 0
		$ sudo sestatus
			SELinux status: enabled
			SELinuxfs mount: /selinux
			Current mode: permissive
			Mode from config file: enforcing
			Policy version: 24
			Policy from config file: targeted
	
	③ 마지막으로 samba 데몬 서비스가 정상적으로 구동 중인지 확인해 봅니다.

		$ sudo service smbd status
		   smbd start/running, process 652
		$ sudo service nmbd status
		   nmbd start/running, process 1340


■ [Q3] Windows에서 ID/PW로 연결에 성공한 이후, 다른 ID로 접속하려 했더니 접속 인증 오류가 나옵니다.

	클라이언트(windows)에서 연결을 한번 시도하였다면 해당 공유 세션이 계속 남아 있어, 이후 접속에도 동일한 접속을 시도하게 됩니다.
	클라이언트(windows)에서 콘솔창을 띄운 후, 아래 명령으로 연결 유무를 확인합니다.
	
		C:> net use
		상태          로컬             원격                          네크워크
		------------------------------------------------------------------------
		OK                             \\주소                     Microseft Windows 네트워크

	위와 같은 형태로 현재 연결되어 있는 공유 세션을 보여줍니다.
	연결을 끊고자 하는 항목을 찾아서 아래와 같은 명령으로 연결을 해제하고, 다시 samba 연결을 시도해 봅니다.

		C:> net use \\주소 /d

■ [Q4] samba 서버에 접속 후, 디렉터리에 접근하려고 하니 권한이 없다는 메시지가 나옵니다.

	① samba 서버에서 해당 디렉터리의 퍼미션을 확인해 봅니다.
	
	읽기/쓰기 속성이 제대로 갖추어 졌는지 확인해보고, 그렇지 않다면 chmod 명령으로 권한을 지정합니다.
	예: 소유자, 그룹, 기타 사용자 모두에게 읽기/쓰기/실행 권한을 주고자 한다면 아래와 같이 명령을 줍니다.
	
		$ sudo chmod 777 디렉터리명
	
	② samba 계정으로 등록되어 있는지 확인하고, 그렇지않다면 등록해 줍니다.
	
		$ sudo smbpasswd -a username


-----------------------------------------------------------------------------------------------------
[ 전송 속도 튜닝 (Performance Tuning) ]

	Windows to Windows
	Windows to Linux
	
	Windows PC 간의 전송 속도 보다, Windows to Linux 간의 전송 속도가 더 느리게 나온다면,
	사용자의 로컬 네트워크 상에서 samba 서버가 최적의 성능을 발휘할 수 있도록 퍼포먼스 튜닝을 한번 고려해 볼 필요가 있습니다.
	
	samba 설정 파일을 열어서 [global] 섹션의 적당한 위치에 아래 내용을 포함시켜 봅니다.
	
		$ sudo vi /etc/samba/smb.conf

			Read Raw = no
			Write Raw = no
			
			#  socket options = TCP_NODELAY IPTOS_LOWDELAY SO_SNDBUF=4096 SO_RCVBUF=4096
			#  socket options = TCP_NODELAY IPTOS_LOWDELAY SO_SNDBUF=8192 SO_RCVBUF=8192
			#  socket options = TCP_NODELAY IPTOS_LOWDELAY SO_SNDBUF=16384 SO_RCVBUF=16384
			#  socket options = TCP_NODELAY IPTOS_LOWDELAY SO_SNDBUF=32768 SO_RCVBUF=35768
			#  socket options = TCP_NODELAY IPTOS_LOWDELAY SO_SNDBUF=65536 SO_RCVBUF=65536
			socket options = TCP_NODELAY IPTOS_LOWDELAY SO_KEEPALIVE SO_RCVBUF=524288 SO_SNDBUF=524288
	
	socket options 부분은 samba 서버의 사양에 따라 설정 결과가 다르게 나타날 수 있으므로 자신의 PC에 맞는 사양을 찾아야 합니다. TCP_NODELAY, IPTOS_LOWDELAY, IPTOS_THROUGHPUT, SO_KEEPALIVE 등의 옵션이 있으며, SO_SNDBUF 와 SO_RCVBUF 값을 2배씩 증가 시키면서 체크해보는 것도 방법입니다.
	여러 socket options을 작성해둔 후, 하나만 주석을 풀어 samba 서비스를 재가동한 뒤, 파일 전송 속도를 체크해 봅니다.




-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
[ AutoFs (자동 마운트) ]

AutoFS는 이름에서도 알 수 있듯이 "자동으로 마운트하는 파일 시스템입니다."
즉, Samba나 NFS 서버 등에 연결함에 있어서, 사용자가 로그인할때 자동으로 마운트하고,
로그아웃하면 역시 자동으로 언마운트 합니다.

autofs를 설명하기 위해선, 미리 구축된 Samba 서버나 NFS 서버가 있어야 합니다.
앞서 samba와 nfs에 대해서 학습한 내용을 바탕으로, 클라이언트에서 autofs로 
자동 마운트하는 방법에 대해 알아보도록 합니다.


■ autofs 설치

	아래 명령으로 autofs를 설치합니다.

		$ sudo apt-get install autofs

■ 설정파일 설명

	마스터맵(/etc/auto_master)에 마운트 지점을 정의하고, 여기서 지정한 개별 마운트 테이블에 세부 내용을 기록합니다.
	여기서 설정하는 방식에 따라 다이렉트(direct)와 인다이렉트(indirect)로 구분합니다.
	
	① 다이렉트 방식은, 마운트할 디렉터리를 직접 지정하여 마운트하는 것으로 일반적인 마운트 방식을 말하며,
	
	② 인다이렉트 방식은, 로그인하는 사용자ID에 따라 자동으로 마운트 포인트를 지정할 수 있는 방식을 말합니다.
	    (이 경우, NIS 서버와 같이 사용자를 식별할 수 있는 부가 옵션이 필요합니다.)
	
	※ 그러므로 아래 가이드는 다이렉트 방식에 대해 기술하도록 하겠습니다.

■ NFS 서버 연결

	① 먼저 마스터맵을 열어서 아래와 같이 설정을 추가합니다.
	
		$ sudo vi /etc/auto_master
			/-        /etc/auto.direct
	
	"/-"는 다이렉트 방식으로 설정함을 의미하고, 다이렉트맵(/etc/auto.direct)에 세부 설정을 하겠다는 뜻입니다.
	
	② 이제 아래와 같이 다이렉트맵을 만들겠습니다.
	
		$ sudo vi /etc/auto.direct
			/media/nfs_client     -rw,soft     192.168.0.1:/var/nfs_server
			
	마운트할 절대경로(/media/nfs_client)를 정의하고,
	옵션으로 권한(rw / ro), 재시도 수준(soft / hard)을 지정하고,
	마운트할 서버의 공유디렉터리 경로(/var/nfs_server)를 기록합니다.
	그리고 마운트할 경로에 해당 디렉터리를 만들어 줍니다.
	
		$ sudo mkdir /media/nfs_client
	
	③ 이제 autofs 서비스를 구동합니다.
	
	그러면 자동으로 NFS 마운트가 진행되어 있음을 확인할 수 있습니다.
	
		$ sudo service autofs restart
	
	④ autofs 서비스를 시스템 시작시에 자동으로 구동되도록 설정하면,
	
	앞으로는 로그인할 때 자동으로 마운트가 되며, 로그아웃할때 자동으로 언마운트가 됩니다.
	
		$ sudo sysv-rc-conf autofs on
	
		※ sysv-rc-conf 가 설치되어 있지 않으면, 아래 명령으로 설치하면 됩니다.
	
		$ sudo apt-get install sysv-rc-conf

■ Samba 서버 연결

	samba 서버와 연결할때는 일부 옵션을 추가로 지정해야 합니다.
	nfs 설정한 내용과 비교하면서 아래와 같이 작성해 봅니다.
	
		$ sudo vi /etc/auto.direct
		
			/media/nfs_client  -rw,soft  192.168.0.1:/var/nfs_server
			/media/smb_client  -fstype=cifs,rw,username=***,passwd=***  ://192.168.0.1/nfs_server
	
	파일시스템 type을 cifs로 지정하고, 접속에 필요한 사용자ID와 PW를 지정합니다.
	그리고 samba 접속이므로 // 뒤로 IP(또는 PC name)을 쓰고, 그 뒤에 공유명을 지정합니다.
	그 이외의 사항은 nfs 연결과 동일합니다.
	
	
[요약] AutoFS 연결
	
	① 설치 :  $ sudo apt-get install autofs
	
	② 설정(NFS)
	
	  + 마스터맵
	
	     $ sudo vi /etc/auto_master
	     /-        /etc/auto.direct
	
	  + 다이렉트맵
	
	     $ sudo vi /etc/auto.direct
	     /media/nfs_client  -rw,soft  192.168.0.1:/var/nfs_server
	     /media/smb_client  -fstype=cifs,rw,username=***,passwd=***  ://192.168.0.1/nfs_server
	
	③ 구동 : $ sudo service autofs restart



-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
